{"version":3,"sources":["api/api.js","redux/dialog-reducer.js","components/common/Paginator/Paginator.module.css","components/Navbar/Navbar.module.css","components/Users/users.module.css","assets/img/user.webp","assets/img/giphy.webp","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormStyle/FormsControls.jsx","components/common/Preloader/Preloader.jsx","components/common/FormStyle/FormsControls.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","props","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","pagesCount","Math","ceil","pages","i","push","p","styles","selpage","onClick","e","onPageChanged","User","user","src","photos","small","userPhoto","disabled","some","Users","key","createSelector","usersPage","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","getTotalUserCount","UsersContainer","pageNumber","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.2324a623.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        'API-KEY': '13dc52a0-dbdd-437f-9078-76f457d46219'\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 1) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method .Please profileAPI object')\n        return profileAPI.getProfile(userId)\n    }\n}\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    }\n}\n\nexport const authAPI = {\n\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n}\n\n\n\n","const SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Andrey'},\n        {id: 3, name: 'Sveta'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Viktor'},\n        {id: 6, name: 'Valera'}\n    ],\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How is your it-kamasutra?'},\n        {id: 3, message: 'Yo'},\n        {id: 4, message: 'Yo'},\n        {id: 5, message: 'Yo'}\n    ]\n};\nconst dialogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return  {\n                ...state,\n                messages: [...state.messages, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE,newMessageBody})\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selpage\":\"Paginator_selpage__1-5vU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\"};","module.exports = __webpack_public_path__ + \"static/media/user.00ca3d08.webp\";","module.exports = __webpack_public_path__ + \"static/media/giphy.da7482ba.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__2kgRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Music_content__1y1v0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Settings_content__3FxpE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\"\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n\n        </nav>)\n}\n\nexport default Navbar;","import React from \"react\";\nimport s from './News.module.css'\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\nexport default News;","import React from \"react\";\nimport s from './Music.module.css'\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\nexport default Music;","import React from \"react\";\nimport s from './Settings.module.css'\n\nconst Settings = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\nexport default Settings;","\n\nexport const updateObjectInArray = (items,itemId,objPropName,newObjProps) => {\n    return  items.map(u => {\n    if (u[objPropName] === itemId) {\n        return {...u, ...newObjProps}\n    }\n    return u;\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users,action.userId,'id',{followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users,action.userId,'id',{followed: false})\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING  : {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalUsersCount(data.totalCount))\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingInProgress(true, userId))\n    let response = await apiMethod(userId)\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingInProgress(false, userId))\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n\n    }\n}\n\nexport default usersReducer;\n\n\n/*{\n            id: 1,\n            photoUrl: 'https://www.peoples.ru/character/movie/danila_bagrov/bagrov_1.jpg',\n            followed: false,\n            fullName: 'Igor',\n            status: 'Im a super coder',\n            location: {city: 'Dnipro', country: 'Ukraine'}\n        },\n        {\n            id: 2,\n            photoUrl: 'https://www.peoples.ru/character/movie/danila_bagrov/bagrov_1.jpg',\n            followed: true,\n            fullName: 'Dimych',\n            status: 'Teacher',\n            location: {city: 'Minsk', country: 'Belarus'}\n        },\n        {\n            id: 3,\n            photoUrl: 'https://www.peoples.ru/character/movie/danila_bagrov/bagrov_1.jpg',\n            followed: false,\n            fullName: 'Anna',\n            status: 'Cool girl',\n            location: {city: 'Harkiv', country: 'Ukraine'}\n        },*/","import React from \"react\";\nimport styles from \"./Paginator.module.css\";\n\nlet Paginator = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    return <div>\n            {pages.map(p => {\n                return <span className={props.currentPage === p && styles.selpage}\n                             onClick={(e) => {\n                                 props.onPageChanged(p)\n                             }}>{p}</span>\n            })}\n        </div>\n        }\nexport default Paginator;\n","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/img/user.webp\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user,followingInProgress,unfollow,follow}) => {\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                       <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                            className={styles.userPhoto}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed\n                        ? <button disabled={followingInProgress\n                            .some(id => id === user.id)} onClick={() => {\n                            unfollow(user.id)\n                        }}>\n                            Unfollow</button>\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\n                                  onClick={() => {\n                                      follow(user.id)\n                                  }}>\n                            Follow</button>}\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n                <span>\n                    <div>{'location.country'}</div>\n                    <div>{'location.city'}</div>\n                </span>\n            </span>\n        </div>)\n\n}\nexport default User;","import React from \"react\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\n    return <div>\n\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalUsersCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\nexport default Users;","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector,(users)=>{\n    return users.filter(u =>true);\n})\n\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\nexport const getTotalUserCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    unfollow,\n    toggleFollowingInProgress,\n    requestUsers\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUserCount, getUsers,\n} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage,pageSize} = this.props;\n        this.props.getUsers(currentPage,pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props\n        this.props.getUsers(pageNumber,pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   unfollow={this.props.unfollow}\n                   follow={this.props.follow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUserCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n\n    }\n}\n\n\n    export\ndefault\ncompose(\n    connect(mapStateToProps, {follow, setCurrentPage, unfollow, toggleFollowingInProgress, getUsers: requestUsers})\n)(UsersContainer)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*let mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}*/","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return <header className={s.header}>\n        <img\n            src=\"https://is2-ssl.mzstatic.com/image/thumb/Purple123/v4/42/d5/af/42d5afc2-b3d3-56ad-1650-018544ec1079/AppIcon-1x_U007emarketing-0-7-0-0-85-220.png/1200x630wa.png\"/>\n        <div className={s.loginBlock}>\n            {props.isAuth\n                ? <div>--- {props.login} --- <button onClick={props.logout}>Logout</button> </div>\n                : <NavLink to={'/login'}>Login</NavLink>}\n        </div>\n    </header>\n}\n\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n\n};\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case  SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n})\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me()\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit('login', {_error: message}));\n    }\n}\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, null));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {connect} from \"react-redux\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login ,\n})\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\nimport {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormStyle/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login, logout} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\nimport style from \"../common/FormStyle/FormsControls.module.css\"\n\n\nconst LoginForm = ({handleSubmit,error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField('Email','email',[required],Input)}\n            {createField('Password','password',[required],Input,{type: 'password'})}\n            {createField(null,'rememberMe',[],Input,{type: 'checkbox'},'remember me')}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n    return <div>\n        <h1>LOGIN</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login, logout})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false,\n\n\n};\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case  INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n    .then(() => {\n        dispatch(initializedSuccess());\n    })\n}\n\n\nexport default appReducer;","let initialState = {}\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n}\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogReducer from \"./dialog-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n//window.store = store;\nexport default store;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n\n    return(props)=>{\n      return  <React.Suspense fallback={<Preloader/>}>\n          <Component {...props}/>\n      </React.Suspense>\n    }\n}","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\n\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import ('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\nexport default SamuraiJSApp;\n\n","import * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(\n    <SamuraiJSApp />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport styles from \"./FormsControls.module.css\"\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched,error},children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\n}\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input{...input}{...restProps}/></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props={},text='') => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        />{text}\n    </div>\n)","import preloader from \"../../../assets/img/giphy.webp\";\nimport React from \"react\";\n\nlet Preloader  = (props) => {\n    return <div>\n        <img src={preloader}/>\n    </div>\n}\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1lIXT\",\"error\":\"FormsControls_error__2tXvf\",\"formSummaryError\":\"FormsControls_formSummaryError__25o56\"};","export const required = (value) => {\n    if (value) return undefined;\n    return 'Field is required'\n}\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength}  symbols `;\n\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\nconst DELETE_POST = 'DELETE_POST'\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi,howe are you?', likesCount: 12},\n        {id: 2, message: 'It\\'s my first post!', likesCount: 11},\n        {id: 3, message: 'Heeeey', likesCount: 25},\n        {id: 4, message: 'Fun', likesCount: 2},\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case  ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case DELETE_POST:\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n\n        default:\n            return state;\n    }\n}\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\n\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n}\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(updateStatus(status));\n    }\n}\n\nexport default profileReducer;"],"sourceRoot":""}
{"version":3,"sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profileinfo/HookProfileStatus.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","HookProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","isOwner","profile","savePhoto","Preloader","className","s","descriptionBlock","src","photos","large","userPhoto","mainPhoto","type","target","files","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","AddPostFormRedux","onSubmit","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.974c7ec2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__BVc_8\",\"wall\":\"ProfileInfo_wall__2VY73\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1kLok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\nimport s from './ProfileInfo.module.css';\n\nconst HookProfileStatus = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(()=>{\n        setStatus(props.status)\n    },[props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deActivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateEditMode}\n                       value={status}/>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default HookProfileStatus;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport HookProfileStatus from \"./HookProfileStatus\";\nimport userPhoto from \"../../../assets/img/user.webp\";\n\n\nconst ProfileInfo = ({isOwner,profile,status,updateStatus,savePhoto}) => {\n    if (!profile){\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e)=>{\n        if (e.target.files.length){\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large ||  userPhoto} className={s.mainPhoto}/>\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\n            <HookProfileStatus status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css'\n\nconst Post = (props) => {\n\n    return (\n        <div className={s.item}>\n            <img src='https://www.screengeek.net/wp-content/uploads/2018/11/avatar-movie.jpg'/>\n            {props.message}\n            <div>\n                <span>Like</span> {props.likesCount}\n            </div>\n        </div>\n\n)\n}\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormStyle/FormsControls\";\n\n\n\nconst MyPosts = React.memo (props => {\n\n    let postsElements =\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>\n        )\n\n    let onAddPost = (value) => {\n        props.addPost(value.newPostText);\n    }\n\n    return <div className={s.postsBlock}>\n        <h3>My posts</h3>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n        <AddPostFormRedux onSubmit={onAddPost}/>\n    </div>\n})\n\nconst maxLength10 = maxLengthCreator(10)\n\nlet AddNewPostForm = (props)=>{\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name='newPostText' placeholder='Heeey brooo'\n                validate={[required,maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\nconst AddPostFormRedux = reduxForm ({form: 'postAddMessageForm'})(AddNewPostForm)\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        },\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo savePhoto={props.savePhoto}\n                         isOwner={props.isOwner}\n                         profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.match.params.userId != prevProps.match.params.userId){\n            this.refreshProfile()\n\n        }\n    }\n\n\n    render() {\n        return (\n            <Profile {...this.props}\n                  isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto}),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer);\n\n\n"],"sourceRoot":""}
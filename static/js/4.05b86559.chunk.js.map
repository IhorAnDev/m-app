{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxlength333","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messageElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCUnKC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCnBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEC,QAASL,EAAMU,U,wCC+BtCC,EAAeC,YAAiB,KAehCC,EAAsBC,YAAW,CAACC,KAAM,wBAAlBD,EAdL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAYC,IACZC,SAAU,CAACC,IAASX,GACpBH,KAAK,iBAAiBe,YAAY,mBAEzC,6BACI,6CAOLC,EA5CC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,YACdC,EACAF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QAClE8B,EACAP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEhC,QAC3CuB,EAAMU,eAM3B,OAAKnC,EAAMoC,OAGP,yBAAKjC,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAEiC,cACbV,GAEL,yBAAKxB,UAAWC,IAAE6B,UACd,6BAAMD,IAGV,kBAACnB,EAAD,CAAqBG,SAdX,SAACsB,GACnBtC,EAAMuC,YAAYD,EAAOH,oBAEC,kBAAC,IAAD,CAAU5B,GAAI,Y,wCCjBxCiC,EAA6B,SAACf,GAAD,MAAY,CACzCW,OAAQX,EAAMgB,KAAKL,S,OCmBRM,sBACXC,aAhBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDTR,SAACW,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKhD,MAAMoC,OACT,kBAACU,EAAcE,KAAKhD,OADI,kBAAC,IAAD,CAAUO,GAAI,cAHV,GACX0C,IAAMH,WAQtC,OADmCH,YAAQH,EAARG,CAAoCI,KCQ5DL,CAGblB","file":"static/js/4.05b86559.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport s from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>\n};\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    return <div className={s.dialog}>{props.message}</div>\n};\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormStyle/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n    let dialogsElements =\n        state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let messageElements =\n        state.messages.map(m => <Message message={m.message} key={m.id}/>)\n    let newMessageBody = state.newMessageBody;\n\n\n    let addNewMessage=(values)=>{\n    props.sendMessage(values.newMessageBody)\n    }\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messageElements}</div>\n\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    );\n}\nconst maxlength333 = maxLengthCreator(100)\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component= {Textarea}\n                       validate={[required,maxlength333]}\n                       name='newMessageBody' placeholder='enter message'/>\n            </div>\n                <div>\n                    <button>send</button>\n                </div>\n        </form>\n  )\n}\nconst AddMessageFormRedux = reduxForm ({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'login'}/>\n            return <Component {...this.props}/>\n        }\n    }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialog-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}